{"ast":null,"code":"var _jsxFileName = \"/Users/ishita/Desktop/ishita-mario/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StartScreen from './components/StartScreen';\nimport GameScreen from './components/GameScreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentScreen, setCurrentScreen] = useState('start');\n  const [clouds, setClouds] = useState([]);\n\n  // Generate a random cloud\n  const generateCloud = () => {\n    const cloudTypes = ['/assets/sprites/cloud.png', '/assets/sprites/different-cloud.png'];\n    const cloudType = cloudTypes[Math.floor(Math.random() * cloudTypes.length)];\n    const newCloud = {\n      id: Date.now() + Math.random(),\n      src: cloudType,\n      top: Math.random() * 150 + 20,\n      size: Math.random() * 60 + 40,\n      duration: Math.random() * 15 + 10,\n      delay: Math.random() * 5\n    };\n    setClouds(prev => [...prev, newCloud]);\n    setTimeout(() => {\n      setClouds(prev => prev.filter(cloud => cloud.id !== newCloud.id));\n    }, (newCloud.duration + newCloud.delay) * 1000);\n  };\n\n  // Generate clouds at random intervals\n  useEffect(() => {\n    const generateRandomCloud = () => {\n      generateCloud();\n      const nextInterval = Math.random() * 6000 + 2000;\n      setTimeout(generateRandomCloud, nextInterval);\n    };\n    const initialDelay = Math.random() * 3000 + 1000;\n    setTimeout(generateRandomCloud, initialDelay);\n  }, []);\n  const goToGame = () => {\n    setCurrentScreen('game');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [currentScreen === 'start' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStartGame: goToGame,\n      showUI: true,\n      clouds: clouds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }, this), currentScreen === 'game' && /*#__PURE__*/_jsxDEV(StartScreen, {\n      onStartGame: goToGame,\n      showUI: false,\n      clouds: clouds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E0jWhTQbVPCw86YeIVUt2JxWECI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","StartScreen","GameScreen","jsxDEV","_jsxDEV","App","_s","currentScreen","setCurrentScreen","clouds","setClouds","generateCloud","cloudTypes","cloudType","Math","floor","random","length","newCloud","id","Date","now","src","top","size","duration","delay","prev","setTimeout","filter","cloud","generateRandomCloud","nextInterval","initialDelay","goToGame","children","onStartGame","showUI","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ishita/Desktop/ishita-mario/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StartScreen from './components/StartScreen';\nimport GameScreen from './components/GameScreen';\n\nconst App = () => {\n  const [currentScreen, setCurrentScreen] = useState('start');\n  const [clouds, setClouds] = useState([]);\n\n  // Generate a random cloud\n  const generateCloud = () => {\n    const cloudTypes = ['/assets/sprites/cloud.png', '/assets/sprites/different-cloud.png'];\n    const cloudType = cloudTypes[Math.floor(Math.random() * cloudTypes.length)];\n    \n    const newCloud = {\n      id: Date.now() + Math.random(),\n      src: cloudType,\n      top: Math.random() * 150 + 20,\n      size: Math.random() * 60 + 40,\n      duration: Math.random() * 15 + 10,\n      delay: Math.random() * 5\n    };\n    \n    setClouds(prev => [...prev, newCloud]);\n    \n    setTimeout(() => {\n      setClouds(prev => prev.filter(cloud => cloud.id !== newCloud.id));\n    }, (newCloud.duration + newCloud.delay) * 1000);\n  };\n\n  // Generate clouds at random intervals\n  useEffect(() => {\n    const generateRandomCloud = () => {\n      generateCloud();\n      const nextInterval = Math.random() * 6000 + 2000;\n      setTimeout(generateRandomCloud, nextInterval);\n    };\n\n    const initialDelay = Math.random() * 3000 + 1000;\n    setTimeout(generateRandomCloud, initialDelay);\n  }, []);\n\n  const goToGame = () => {\n    setCurrentScreen('game');\n  };\n\n  return (\n    <div>\n      {currentScreen === 'start' && <StartScreen onStartGame={goToGame} showUI={true} clouds={clouds} />}\n      {currentScreen === 'game' && <StartScreen onStartGame={goToGame} showUI={false} clouds={clouds} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}